#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define ARQUIVO "funcionarios.dat"

typedef struct {
    int id;
    char nome[50];
    char cargo[30];
    int salario;
} Funcionario;

void cadastrarFuncionario() {
    Funcionario funcionario;
    FILE *arquivo = fopen(ARQUIVO, "ab");

    if (!arquivo) {
        perror("Erro ao abrir o arquivo");
        return;
    }

    printf("ID do funcionário: ");
    scanf("%d", &funcionario.id);
    getchar(); // Limpar buffer
    printf("Nome completo: ");
    fgets(funcionario.nome, 50, stdin);
    funcionario.nome[strcspn(funcionario.nome, "\n")] = '\0'; // Remover nova linha
    printf("Cargo: ");
    fgets(funcionario.cargo, 30, stdin);
    funcionario.cargo[strcspn(funcionario.cargo, "\n")] = '\0'; // Remover nova linha
    printf("Salário (em reais): ");
    scanf("%d", &funcionario.salario);

    fwrite(&funcionario, sizeof(Funcionario), 1, arquivo);
    fclose(arquivo);

    printf("Funcionário cadastrado com sucesso!\n");
}

void alterarFuncionario() {
    int id, encontrado = 0;
    Funcionario funcionario;
    FILE *arquivo = fopen(ARQUIVO, "rb+");

    if (!arquivo) {
        perror("Erro ao abrir o arquivo");
        return;
    }

    printf("Informe o ID do funcionário que deseja alterar: ");
    scanf("%d", &id);

    while (fread(&funcionario, sizeof(Funcionario), 1, arquivo)) {
        if (funcionario.id == id) {
            encontrado = 1;

            printf("Novo cargo: ");
            getchar();
            fgets(funcionario.cargo, 30, stdin);
            funcionario.cargo[strcspn(funcionario.cargo, "\n")] = '\0';
            printf("Novo salário (em reais): ");
            scanf("%d", &funcionario.salario);

            fseek(arquivo, -sizeof(Funcionario), SEEK_CUR);
            fwrite(&funcionario, sizeof(Funcionario), 1, arquivo);
            break;
        }
    }

    fclose(arquivo);

    if (encontrado)
        printf("Dados alterados com sucesso!\n");
    else
        printf("Funcionário com ID %d não encontrado.\n", id);
}

void excluirFuncionario() {
    int id, encontrado = 0;
    Funcionario funcionario;
    FILE *arquivo = fopen(ARQUIVO, "rb");
    FILE *temp = fopen("temp.dat", "wb");

    if (!arquivo || !temp) {
        perror("Erro ao abrir os arquivos");
        return;
    }

    printf("Informe o ID do funcionário que deseja excluir: ");
    scanf("%d", &id);

    while (fread(&funcionario, sizeof(Funcionario), 1, arquivo)) {
        if (funcionario.id == id) {
            encontrado = 1;
        } else {
            fwrite(&funcionario, sizeof(Funcionario), 1, temp);
        }
    }

    fclose(arquivo);
    fclose(temp);

    remove(ARQUIVO);
    rename("temp.dat", ARQUIVO);

    if (encontrado)
        printf("Funcionário excluído com sucesso!\n");
    else
        printf("Funcionário com ID %d não encontrado.\n", id);
}

void consultarFuncionario() {
    int id, encontrado = 0;
    Funcionario funcionario;
    FILE *arquivo = fopen(ARQUIVO, "rb");

    if (!arquivo) {
        perror("Erro ao abrir o arquivo");
        return;
    }

    printf("Informe o ID do funcionário que deseja consultar: ");
    scanf("%d", &id);

    while (fread(&funcionario, sizeof(Funcionario), 1, arquivo)) {
        if (funcionario.id == id) {
            printf("\nID: %d\n", funcionario.id);
            printf("Nome: %s\n", funcionario.nome);
            printf("Cargo: %s\n", funcionario.cargo);
            printf("Salário: R$%d\n", funcionario.salario);
            encontrado = 1;
            break;
        }
    }

    fclose(arquivo);

    if (!encontrado)
        printf("Funcionário com ID %d não encontrado.\n", id);
}

void listarFuncionarios() {
    Funcionario funcionario;
    FILE *arquivo = fopen(ARQUIVO, "rb");

    if (!arquivo) {
        perror("Erro ao abrir o arquivo");
        return;
    }

    printf("\nLista de funcionários cadastrados:\n");
    printf("--------------------------------------\n");

    while (fread(&funcionario, sizeof(Funcionario), 1, arquivo)) {
        printf("ID: %d\n", funcionario.id);
        printf("Nome: %s\n", funcionario.nome);
        printf("Cargo: %s\n", funcionario.cargo);
        printf("Salário: R$%d\n", funcionario.salario);
        printf("--------------------------------------\n");
    }

    fclose(arquivo);
}

int main() {
    int opcao;

    do {
        printf("\nMenu de Opções:\n");
        printf("1. Cadastrar funcionário\n");
        printf("2. Alterar dados de um funcionário\n");
        printf("3. Excluir funcionário\n");
        printf("4. Consultar funcionário\n");
        printf("5. Listar todos os funcionários\n");
        printf("0. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                cadastrarFuncionario();
                break;
            case 2:
                alterarFuncionario();
                break;
            case 3:
                excluirFuncionario();
                break;
            case 4:
                consultarFuncionario();
                break;
            case 5:
                listarFuncionarios();
                break;
            case 0:
                printf("Saindo do programa...\n");
                break;
            default:
                printf("Opção inválida! Tente novamente.\n");
        }
    } while (opcao != 0);

    return 0;
}
